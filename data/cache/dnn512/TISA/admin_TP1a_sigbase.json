{
    "alexandra.larsonneur@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+(math.exp(-x)))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "alexandra.larsonneur@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+(math.exp(-x)))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:42:31",
        "atype": "bkcode"
    },
    "alexis.akujuobi-asoluka@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    1/math.exp(1+math.exp(-x))\n    s = 0 # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "alexis.akujuobi-asoluka@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    1/math.exp(1+math.exp(-x))\n    s = 0 # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 0.0,
        "update_time": "2023-10-03 13:49:41",
        "atype": "bkcode"
    },
    "ali.m-sahi@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "ali.m-sahi@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:41:32",
        "atype": "bkcode"
    },
    "angel.jouen@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "angel.jouen@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:49:17",
        "atype": "bkcode"
    },
    "antoine.rochette@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "antoine.rochette@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:44:28",
        "atype": "bkcode"
    },
    "arij.salablab@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "arij.salablab@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:27",
        "atype": "bkcode"
    },
    "armand.loisil@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 0 # ...\n    s = 1/(1+math.exp(x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "armand.loisil@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 0 # ...\n    s = 1/(1+math.exp(x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 1.0,
        "atype": "bkcode",
        "update_time": "2023-10-03 13:43:30"
    },
    "axel.autexier@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "axel.streiff@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = (1)/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "axel.streiff@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = (1)/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:49:06",
        "atype": "bkcode"
    },
    "badis.perdrix@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "badis.perdrix@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:50:27",
        "atype": "bkcode"
    },
    "baptiste.rousselet@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n\n    s = 1/(1+math.exp(-x))# ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "baptiste.rousselet@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n\n    s = 1/(1+math.exp(-x))# ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:32",
        "atype": "bkcode"
    },
    "colin.duchanoy@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "colin.duchanoy@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:45:47",
        "atype": "bkcode"
    },
    "corentin.dumont@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "dorian.rondeau@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "evan.garcia@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "evan.garcia@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:12",
        "atype": "bkcode"
    },
    "gaetan.chiesura@ipsa.fr": {
        "answer": "import math as m\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+m.exp((-x)))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "gaetan.chiesura@ipsa.fr",
        "main_execution": "import math as m\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+m.exp((-x)))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:45:20",
        "atype": "bkcode"
    },
    "geoffrey.vaillant@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "guillaume.therin@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "john.doe@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 0 # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "john.doe@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 0 # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 0.0,
        "atype": "bkcode",
        "update_time": "2023-09-28 10:22:22"
    },
    "julian.lavarelo@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "julian.lavarelo@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:44:05",
        "atype": "bkcode"
    },
    "lea.dupin@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(- x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "lea.dupin@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(- x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:41",
        "atype": "bkcode"
    },
    "luc.fourty@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "luc.fourty@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "atype": "bkcode",
        "update_time": "2023-10-03 13:43:04"
    },
    "luc.sauleau@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "luc.sauleau@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:43:43",
        "atype": "bkcode"
    },
    "ludovic.said@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "mathieu.klingler@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "mathieu.klingler@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:10",
        "atype": "bkcode"
    },
    "matteo.crosnier-de-bellaistre@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "matteo.crosnier-de-bellaistre@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 1.0,
        "update_time": "2023-10-03 13:44:34",
        "atype": "bkcode"
    },
    "mikael.kealbert@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "nathan.heckmann@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    \n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "nathan.heckmann@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    \n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:10",
        "atype": "bkcode"
    },
    "nils.joanne@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "nils.joanne@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-x))\n\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "atype": "bkcode",
        "update_time": "2023-10-03 13:44:57"
    },
    "omar.al-hammal@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "pedro-henrique.valvezon-maldonado@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "riccardo.cecchetto@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Implement the function using math.exp\n    s = 1 / (1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "riccardo.cecchetto@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Implement the function using math.exp\n    s = 1 / (1+math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "atype": "bkcode",
        "update_time": "2023-10-03 13:45:47"
    },
    "romain.miaux@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "romain.miaux@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:46:09",
        "atype": "bkcode"
    },
    "solution": {
        "update_time": "2023-10-11 07:06:55",
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\nprint(\"basic_sigmoid(3)=\", basic_sigmoid(3))\n\n",
        "visible": true,
        "note_upd": "2023-10-11 05:07:01",
        "explanation": "",
        "evaluation": "def student_evaluation_function():\n    score = 0\n    for i in range(10):\n        score += bulkhours.is_equal(data_test=student.basic_sigmoid(i), max_score=1.0, data_ref=teacher.basic_sigmoid(i), min_score=0)\n\n    return score\n",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x))\n\n    return s\n\nprint(\"basic_sigmoid(3)=\", basic_sigmoid(3))\n\n",
        "user": "solution",
        "note": 10.0,
        "atype": "bkcode",
        "hint": ""
    },
    "sualp.komurcuoglu@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "sualp.komurcuoglu@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:48:27",
        "atype": "bkcode"
    },
    "thibaud.bonnet@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n\n    return 1 / (1 + math.exp(-x))\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "thibaud.bonnet@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n\n    return 1 / (1 + math.exp(-x))\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:43:03",
        "atype": "bkcode"
    },
    "wassil.amghar@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-1*x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "wassil.amghar@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1/(1+math.exp(-1*x)) # ...\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:44:49",
        "atype": "bkcode"
    },
    "wenceslas.lombard@ipsa.fr": {
        "note_upd": "2023-10-11 05:07:01",
        "note": NaN
    },
    "yann-loic-atasse.atakoui@ipsa.fr": {
        "answer": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-1*x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note_upd": "2023-10-11 05:07:01",
        "user": "yann-loic-atasse.atakoui@ipsa.fr",
        "main_execution": "import math\n\ndef basic_sigmoid(x):\n    \"\"\"\n    Compute sigmoid of x.\n\n    :param x: a scalar\n    :return: s  sigmoid(x)\n    \"\"\"\n\n    # Implement the function using math.exp\n    s = 1 / (1 + math.exp(-1*x))\n\n    return s\n\n# test output\nbasic_sigmoid(3)\n",
        "note": 10.0,
        "update_time": "2023-10-03 13:49:46",
        "atype": "bkcode"
    }
}